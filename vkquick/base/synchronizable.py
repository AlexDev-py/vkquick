class Synchronizable:
    """
    Протокол для синхронизации объектов

    Некоторое поведение объектов может быть
    асинхронным (например, вызов API методов),
    но использовать те же возможности, когда весь код строится
    синхронно и конкурировать нечему, не нужно.
    Поэтому этот класс определяет общее поведение для
    объектов, чье поведение должно стать синхронным.
    """

    __synchronized = False  # По умолчанию асинхронно

    @property
    def is_synchronized(self):
        """
        Состояние режима объекта: асинхронный/синхронный
        """
        return self.__synchronized

    def synchronize(self):
        """
        Метод, меняющий поведение на синхронное.
        Если вы меняете поведение разово, используйте
        вместе с менеджером контекста:

            with obj.synchronize():
                obj.some_method_that_was_async_but_now_sync()
        """
        self.__synchronized = True
        return self

    def __enter__(self):
        """
        Менеджер контекста гарантирует, что
        поведение объекта обратно поменяется на асинхронное
        """

    def __exit__(self, *args):
        self.__synchronized = False
